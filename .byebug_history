continue
record.carrier == user
record
continue
user
record.carrier
record
continue
@shipment.deals.last.carrier
@shipment.deals.last
@shipment.deals.first
@shipment.deals
current_carrier
@deal
deal
continue
@shipment.deals
@shipment.deals.
@shipment.deals.count
@shipment.deals
@deal
current_carrier
continue
@shipment_details[:delivery]
@shipment_details[:pickup]
@shipment_details[:shipment]
@shipment_details
continue
@shipment_details[:pickup]
@shipment_details[:shipment]
@shipment_details
continue
@deals.first[:deal].shipment.frequency
@deals.first
@deals.first[:deal].shipment.frequency
@deals.first[:deal].shipment
@deals.first[:deal]
@deals.first
@deals
@all_deals.first
@all_deals.first.shipment
@all_deals.first
@all_deals
@deals.first.count
@deals.first
@shipment
@shipments
continue
@shipment.deals.present?
@shipment.deals.blank?
@shipment.deals
@shipment
continue
@carriers_two_conditions.pluck(:id)
@carriers_two_conditions.count
@carriers_two_conditions
@all_carriers_two_conditions.count
@all_carriers_two_conditions
continue
@all_carriers_two_conditions
continue
carriers_with_deals.count
carriers_with_deals
continue
carriers_with_deals
continue
@shipment.deals
carriers_with_deals
continue
@shipments.first[:carriers].first.company_name
@shipments.first[:carriers].first.id
@shipments.first[:carriers].first
@shipments.first[:carriers].count
@shipments.first[:carriers]
@shipments.first
continue
@shipments.first[:deal].first
@shipments.first[:deal].count
@shipments.first[:deal]
continue
@shipments.first[:deal]
continue
@shipments.first[:deal].count
@shipments.first[:deal]
@shipments.first.count
@shipments.first
continue
@shipments.first[:delivery]
@shipments.first[:deal]
@shipments.first
params
continue
@shipments.first[:shipment].deals.present?
@shipments.first[:shipment].deals
@shipments.first[:shipment]
@shipments.first
@shipments
shipment[:shipment]
continue
@carriers.count
@carriers
continue
@carriers_ids
continue
params
continue
params
continue
params
continue
params
continue
r
continue
@carriers_ids.count
@carriers_ids
@shipment
params
exit
continue
params[:carriers][:ids].split(" ")
params[:carriers][:ids]
params
exit
params
continue
params
continue
params[:carriers][:ids].split(" ")
params[:carriers][:ids].split("")
params[:carriers][:ids]
params
continue
params
continue
params
continue
params[:carriers][:ids]
params
continue
params
continue
params[:id]
@shipment
params
continue
params[:carriers][:ids]
params[:carriers]
params
continue
params[:carriers_id]
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params[:shipment]
params
continue
params
continue
params
continue
params[:format].split("/")
continue
params[:format]
params[:format].split("/")
s
s= params[:format]
params[:format]
params
continue
params
continue
params
continue
params[:format]
params
continue
params
carrier_params
continue
params
@shipment
continue
params
@shipment
exit
params
continue
@shipment.deals
@shipment
continue
shipment[:shipment].available
shipment[:shipment]
continue
shipment[:shipment].available
shipment[:shipment]
shipment
exit
continue
s.deals
s.deal
s.deals
s = Shipment.find(8)
shipment[:deal]
shipment
exit
continue
shipment[:deal][:carrier].present?
shipment[:deal][:carrier]
shipment[:deal]
shipment
exit
continue
exit
continue
shipment[:deal].carriers
shipment[:deal].carrier
shipment[:deal]
shipment[:deal][:carrier]
shipmet[:deal]
shipment[:deal]
shipment[:shipment].count
shipment[:shipment]
shipment.count
shipment
shipment[:deal]
continue
Carrier.where("id > 20"OR "areas_covered @> '{北海道}'")
Carrier.where("id > 20 AND areas_covered @> '{北海道}'")
Carrier.where("id > 20 UNION areas_covered @> '{北海道}'")
Carrier.where("id > 20" UNION "areas_covered @> '{北海道}'")
Carrier.where("id > 20" UNION )
Carrier.where("id > 20 UNION ")
Carrier.where("id > 20").count
Carrier.where("id > 20")
Carrier.pluck(:id)
continue
@carriers_location_condition - @carriers_two_conditions
["a","b"] - ["a"]
@carriers_location_condition
東京都
continue
Carrier.where("areas_covered @> ARRAY[?]::varchar[] UNION favorite_products @> ARRAY[?]::varchar[]",[@pickup.prefecture, @delivery.prefecture], @pickup.category)
Carrier.where("areas_covered @> ARRAY[?]::varchar[] AND favorite_products @> ARRAY[?]::varchar[]",[@pickup.prefecture, @delivery.prefecture], @pickup.category)
continue
