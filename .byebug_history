continue
policy_scope(Shipment).where(shipper: current_shipper)
clean
policy_scope(Shipment).where(shipper: current_shipper)
policy_scope(Shipment).find_by(shipper: current_shipper)
policy_scope(Shipment)
continue
current_carrier.deals.find(1)
current_carrier.deals
current_carrier.deals.find
current_carrier.deals.find(@shipment)
current_carrier.deals
@carrier_deal
continue
@carrier_deal
continue
@message
continue
@message
continue
@message
continue
deal.deal_status
deal
deal = current_carrier.deals.find_by(shipment: @shipment)
current_carrier.deals.find_by(shipment: @shipment)
current_carrier.deals.first.shipmen
current_carrier.deals.find_by(shipment: @shipment)
current_carrier.deals.find_by(shipment_id: @shipment)
current_carrier.deals.find_by(@shipment)
current_carrier.deals.find_by(shipment_id: @shipment)
current_carrier.deals.find_by(shipment: @shipment)
current_carrier.deals.find_by(shipment_id: @shipment)
current_carrier.deals.find_by(shipment_id: @shipment.id)
current_carrier.deals.find_by(shipment_id: @shipment)
current_carrier.deals.find_by(shipment_id: 35)
current_carrier.deals.find_by(@shipment)
current_carrier.deals
current_carrier.deals.find(35)
@shipment.id
current_carrier.deals.find(@shipment.id)
current_carrier.deals.find(@shipment)
@shipment
current_carrier.deals
current_carrier
continue
current_carrier
current_user.deals
current_user
continue
current_user.deals
current_user
current_shipper
current_carrier
continue
@deal
exit
deal_params
@shipment
continue
shipment_params
exit
deal_params
exit
params[:shipment_id]
params
deal_params
exit
deal_params
continue
deal_params
exit
deal_params
continue
params[:shipment_id]
params
deal_params
exit
deal_params
exit
params[:shipment_id]
params[:deal]
params
deal_params
exit
deal_params
params
exit
@shipments.first[:shipment]
@shipments.first[:delivery][:prefecture]
@shipments.first[:pickup][:prefecture]
@shipments.first[:pickup]
@shipments.first[:shipment].shipper.email
@shipments.first[:shipment].shipper
@shipments.first[:shipment]
@shipments.first
@shipments.first.shipper
@shipments.first[:shipment][:id]
@shipments.first[:shipment]
@shipments.first
@shipments
exit
@shipments
@shipment
continue
@ships
continue
@ships
continue
@ships.first[:shipment]
@ships.first.shipment
@ships.first
@ships
exit
@ships
shipment
continue
shipment
continue
@ship
continue
@shipments.present?
@shipments
continue
@shipments
continue
@facilities.present?
@facilities
continue
@locations
continue
@locations
@locations = @shipment.locations.order(created_at: :asc)
@shipment.locations.order(created_at: :asc)
@shipment.locations
@locations
continue
@shipment.errors.messages
@shipment.error.messages
@shipment.errors.message
@shipment.errors.messages
continue
@shipment.locations
@shipment
continue
@shipment.locations
@shipment
continue
params
continue
params[:shipment][:locations_attributes]["0"]
params[:shipment][:locations_attributes]
params[:shipment][:locations_attributes]['0']
params[:shipment][:locations_attributes]
params[:shipment]
params
continue
params
continue
params
continue
params
continue
params
continue
params
@shipment.locations
continue
@shipment.locations.count
@shipment.locations
continue
shipment_params
@shipment.locations.count
@shipment.locations
@shipment
params
continue
params
@shipment.locations.count
@shipment.locations
exit
shipment_params
continue
shipment_params
params
continue
exit
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
exit
params
continue
params
@shipment
@shipment.locations
continue
@shipment.locations
continue
@shipment.locations
continue
@shipment.locations
@shipment.locations.count
continue
@shipment.locations.count
continue
@shipment.locations.count
@shipment.locations
exit
params
continue
params
continue
@shipment.locations.empty?
continue
@shipment.locations.empty?
@shipment.locations
exit
@shipment.locations.count
continue
@shipment.locations.count
continue
@shipment.locations.empty?
@shipment.locations
continue
@shipment.locations
@shipment
exit
@shipment.locations
continue
exit
params
continue
@shipment.locations.count
@shipment.locations
@shipment
params
exit
params
continue
params
exit
